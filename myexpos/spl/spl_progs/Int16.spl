breakpoint;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
alias usp R7;
usp=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias r1 R1;
alias r2 R2;
alias r3 R3;
alias r4 R4;
alias cnt R8;
alias temp R9;
r1=[[PTBR+2*((usp-5)/512)]*512+((usp-5)%512)];
r2=[[PTBR+2*((usp-4)/512)]*512+((usp-4)%512)];
r3=[[PTBR+2*((usp-3)/512)]*512+((usp-3)%512)];
alias retn R0;
retn=[PTBR+2*((usp-1)/512)]*512+((usp-1)%512);
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=r1;
if(r1==22) then
if([PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+3]!="root"&&[SYSTEM_STATUS_TABLE+1]!=2) then
[retn]=-2;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
cnt=2;
while(cnt<16) do
if([USER_TABLE+cnt*2]==r2) then
[retn]=-1;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
if([USER_TABLE+cnt*2]==-1) then
break;
endif;
cnt=cnt+1;
endwhile;
if(cnt==16) then
[retn]=-3;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
encrypt r3;
[USER_TABLE+cnt*2]=r2;
[USER_TABLE+cnt*2+1]=r3;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
if(r1==23) then
if(r2=="root"||r2=="kernel") then
[retn]=-2;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
cnt=2;
while(cnt<16) do
if([USER_TABLE+cnt*2]==r2) then
break;
endif;
cnt=cnt+1;
endwhile;

if(cnt==16) then
[retn]=-1;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
temp=cnt;
cnt=0;
while(cnt<60) do 
if([INODE_TABLE+cnt*16+3]==temp) then
[retn]=-3;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
cnt=cnt+1;
endwhile;

[USER_TABLE+temp*2]=-1;
[USER_TABLE+temp*2+1]=-1;
[retn]=0;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;

if(r1==24) then

if([SYSTEM_STATUS_TABLE+1]!=2) then
print "Wrong pro";
[retn]=-1;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;

cnt=0;
print [USER_TABLE+2];
while(cnt<16) do 
if([USER_TABLE+cnt*2]==r2) then
break;
endif;
cnt=cnt+1;
endwhile;
if(cnt==16) then
print "user not found";
[retn]=-1;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
if([PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+3]!=cnt&&[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+3]!=1) then
[retn]=-1;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;


encrypt r3;
[USER_TABLE+cnt*2+1]=r3;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;

if(r1==26) then
cnt=2;
while(cnt<16) do 
if([USER_TABLE+cnt*2]==r2) then
[retn]=cnt;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;
cnt=cnt+1;
endwhile;
[retn]=-1;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;

if(r1==25) then
if(r2<0||r2>15||[USER_TABLE+r2*2]==-1) then
[retn]=-1;
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;

[retn]=[USER_TABLE+r2*2];
SP=usp;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;
endif;

