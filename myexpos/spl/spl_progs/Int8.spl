[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=8;
alias usp R7;
usp=SP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias funcnum R1;
alias PID R2;
alias retn R0;
retn=[PTBR+2*((usp-1)/512)]*512+((usp-1)%512);
funcnum=1;
multipush(R0,R1,R7);
call MOD_1;
breakpoint;
PID=retn;
multipop(R0,R1,R7);
if(PID==-1) then
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
SP=usp;
[retn]=-1;
ireturn;
endif;
breakpoint;

if([PTBR+4]==-1) then
funcnum=1;
multipush(R0,R1,R2,R7);
call MOD_2;
breakpoint;
[PTBR+4]=retn;
[PTBR+5]="0110";
multipop(R0,R1,R2,R7);

funcnum=1;
multipush(R0,R1,R2,R7);
call MOD_2;
breakpoint;
[PTBR+6]=retn;
[PTBR+7]="0110";
multipop(R0,R1,R2,R7);

endif;

alias tablebase R9;
tablebase=PAGE_TABLE_BASE;

funcnum=1;
multipush(R0,R1,R2,R7,R9);
call MOD_2;
breakpoint;

[tablebase+PID*20+16]=retn;
[tablebase+PID*20+17]="0110";
multipop(R0,R1,R2,R7,R9);

funcnum=1;
multipush(R0,R1,R2,R7,R9);
call MOD_2;
breakpoint;
[tablebase+PID*20+18]=retn;
[tablebase+PID*20+19]="0110";
multipop(R0,R1,R2,R7,R9);


funcnum=1;
multipush(R0,R1,R2,R7,R9);
call MOD_2;
breakpoint;
alias addr R12;
alias tst R13;
tst=PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;
addr=PROCESS_TABLE+PID*16;
[addr+11]=retn;
multipop(R0,R1,R2,R7,R9);

[addr+3]=[tst+3];
[addr+6]=[tst+6];
[addr+10]=[tst+10];
[addr+7]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+7];
[addr+13]=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];

[addr+9]=0;
[addr+0]=0;
[addr+12]=0;
[addr+2]=[SYSTEM_STATUS_TABLE+1];
[addr+4]="CREATED";
[addr+14]=tablebase+PID*20;
[addr+15]=20;
breakpoint;
alias cnt R10;
cnt=2;
while(cnt<10) do
[DISK_MAP_TABLE+PID*10+cnt]= [DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+cnt];
cnt=cnt+1;
endwhile;
cnt=0;
while(cnt<16) do
[tablebase+PID*20+cnt]=[PTBR+cnt];
[MEMORY_FREE_LIST+[PTBR+cnt]]=[MEMORY_FREE_LIST+[PTBR+cnt]]+1;
cnt=cnt+1;
[tablebase+PID*20+cnt]=[PTBR+cnt];
cnt=cnt+1;
endwhile;
alias strt R11;
cnt=0;
strt=[PTBR+16]*512;
alias nwstrt R12;
alias diff R13;
diff=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]-8*512;

nwstrt=[tablebase+PID*20+16]*512;
while(cnt<=diff) do
[cnt+(nwstrt)]=[cnt+strt];
cnt=cnt+1;
endwhile;
breakpoint;
alias childst R8;
childst=[PROCESS_TABLE+PID*16+13];
[[PROCESS_TABLE+PID*16+11]*512]=BP;
[PROCESS_TABLE+PID*16+12]=0;
breakpoint;
nwstrt=[PROCESS_TABLE+PID*16+11]*512+496;
strt=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512+496;
cnt=0;
while(cnt<8) do 
[nwstrt+cnt*2]=[strt+cnt*2];
[nwstrt+cnt*2+1]=[strt+cnt*2+1];
if([strt+cnt*2]==0) then
[OPEN_FILE_TABLE+[strt+cnt*2+1]*4+1]=[OPEN_FILE_TABLE+[strt+cnt*2+1]*4+1]+1;
endif;
if([strt+cnt*2]==1) then 
[SEMAPHORE_TABLE+[strt+cnt*2+1]*4+1]=[SEMAPHORE_TABLE+[strt+cnt*2+1]*4+1]+1;
endif;
cnt=cnt+1;
endwhile;
[retn]=PID;
[[tablebase+PID*20+2*((childst-1)/512)]*512+((childst-1)%512)]=0;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
SP=usp;
breakpoint;
ireturn;
